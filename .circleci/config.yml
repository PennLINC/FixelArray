version: 2
jobs:

  build:
    environment:
      TZ: "/usr/share/zoneinfo/America/New_York"
      SCRATCH: "/scratch"
    docker:
      - image: docker:18.06.1-ce-git
    working_directory: /tmp/src/FixelDB
    steps:
      - checkout
      - run:
          name: Install parallel gzip and python3
          command: |
            apk add --no-cache pigz python3 tar
      - restore_cache:
          keys:
            - docker-v1-{{ .Branch }}-{{ .Revision }}
            - docker-v1-{{ .Branch }}-
            - docker-v1-master-
            - docker-v1-
          paths:
            - /tmp/cache/docker.tar.gz
      - setup_remote_docker
      - run:
          name: Load Docker image layer cache
          no_output_timeout: 30m
          command: |
            docker info
            set +o pipefail
            if [ -f /tmp/cache/docker.tar.gz ]; then
              pigz -d --stdout /tmp/cache/docker.tar.gz | docker load
              docker images
            fi
      - run:
          name: Build Docker image
          no_output_timeout: 3h
          command: |
            # Get version, update files.
            THISVERSION=$( python3 get_version.py )
            if [[ ${THISVERSION:0:1} == "0" ]] ; then
              echo "WARNING: latest git tag could not be found"
              echo "Please, make sure you fetch all tags from upstream with"
              echo "the command ``git fetch --tags --verbose`` and push"
              echo "them to your fork with ``git push origin --tags``"
            fi
            # Build docker image
            e=1 && for i in {1..5}; do
              docker build \
                --cache-from=pennbbl/fixeldb \
                --rm=false \
                -t pennbbl/fixeldb:latest \
                --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` \
                --build-arg VCS_REF=`git rev-parse --short HEAD` \
                --build-arg VERSION="${CIRCLE_TAG:-$THISVERSION}" . \
              && e=0 && break || sleep 15
            done && [ "$e" -eq "0" ]

      - run:
          name: Docker save
          no_output_timeout: 40m
          command: |
            mkdir -p /tmp/cache
            docker save pennbbl/fixeldb:latest \
            | pigz -3 > /tmp/cache/docker.tar.gz

      - persist_to_workspace:
          root: /tmp
          paths:
            - src/FixelDB

      - save_cache:
         key: docker-v1-{{ .Branch }}-{{ .Revision }}-{{ epoch }}
         paths:
           - /tmp/cache/docker.tar.gz

  get_data:
    machine:
      # Ubuntu 16.04, docker 18.09.3, docker-compose 1.23.1
      image: ubuntu-1604:201903-01
    working_directory: /home/circleci/data
    steps:
      - restore_cache:
          keys:
            - data-v1-{{ .Revision }}
            - data-v1-

      - run:
          name: Download example group fixel data directory
          command: |
            mkdir -p /tmp/data
            if [[ ! -d /tmp/data/fixeldata ]]; then
              wget --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 0 -q \
                -O fixeldata.tar.gz "https://upenn.box.com/shared/static/a1co6vdi8i4tqt12cjp96glrq32hg3kq.gz"
              tar xvfz fixeldata.tar.gz -C /tmp/data/
            else
              echo "Fixel data was cached"
            fi

      - persist_to_workspace:
          root: /tmp
          paths:
            - data

      - save_cache:
         key: data-v1-{{ epoch }}
         paths:
            - /tmp/data


  FixelUpload:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: /tmp/data
    steps:
      - attach_workspace:
          at: /tmp
      - restore_cache:
          keys:
            - docker-v1-{{ .Branch }}-{{ .Revision }}
            - data-v1-{{ .Revision }}
            - data-v1-
      - run:
          name: Load Docker image layer cache
          no_output_timeout: 30m
          command: |
            docker info
            set +o pipefail
            if [ -f /tmp/cache/docker.tar.gz ]; then
              sudo apt update && sudo apt -y install pigz
              pigz -d --stdout /tmp/cache/docker.tar.gz | docker load
              docker images
            fi

      - run:
          name: Upload test data
          no_output_timeout: 2h
          command: |
            cp /tmp/src/FixelDB/.circleci/test_cohort.csv /tmp/data/test_cohort.csv
            sudo chmod a+r /tmp/data/test_cohort.csv
            docker run --rm -it \
              -v /tmp/data:/inputs \
              -v /tmp:/tmp \
              pennbbl/fixeldb:latest \
              --relative-root /inputs \
              --directions-file fixeldata/directions.mif \
              --index-file fixeldata/index.mif \
              --cohort-file test_cohort.csv \
              --output-hdf5 fixels.h5

      - store_artifacts:
          path: /tmp/data/fixels.h5

  deploy_docker:
    machine:
      image: circleci/classic:201711-01
    working_directory: /tmp/src/FixelDB
    steps:
      - checkout:
          path: /home/circleci/src/FixelDB
      - run:
          name: Check whether build should be skipped
          command: |
            cd /home/circleci/src/FixelDB
            if [[ "$( git log --format='format:%s' -n 1 $CIRCLE_SHA1 | grep -i -E '^docs?(\(\w+\))?:' )" != "" ]]; then
              echo "Only docs build"
              circleci step halt
            fi
      - restore_cache:
          keys:
            - docker-v1-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Load Docker image layer cache
          no_output_timeout: 30m
          command: |
            docker info
            set +o pipefail
            if [ -f /tmp/cache/docker.tar.gz ]; then
              sudo apt update && sudo apt -y install pigz
              pigz -d --stdout /tmp/cache/docker.tar.gz | docker load
              docker images
            fi
      - run:
          name: Deploy to Docker Hub
          no_output_timeout: 40m
          command: |
            if [[ -n "$DOCKER_PASS" ]]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker tag pennbbl/fixeldb pennbbl/fixeldb:unstable
              docker push pennbbl/fixeldb:unstable
              if [[ -n "$CIRCLE_TAG" ]]; then
                docker push pennbbl/fixeldb:latest
                docker tag pennbbl/fixeldb pennbbl/fixeldb:$CIRCLE_TAG
                docker push pennbbl/fixeldb:$CIRCLE_TAG
              fi
            fi

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/

      - get_data:
          filters:
            branches:
              ignore:
                - /docs?\/.*/
                - /tests?\/.*/
            tags:
              only: /.*/

      - FixelUpload:
          requires:
            - get_data
            - build
          filters:
            branches:
              ignore:
                - /docs?\/.*/
                - /tests?\/.*/
            tags:
              only: /.*/

      - deploy_docker:
          requires:
            - FixelUpload
          filters:
            branches:
              only: master
            tags:
              only: /.*/
